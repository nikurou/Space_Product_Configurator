/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useEffect, useRef } from "react";
import { useGLTF } from "@react-three/drei";
import BombGLTF from "../../assets/3d_models/bomb.gltf";

const Bomb = (props) => {
  const group = useRef();
  const { nodes, materials } = useGLTF(BombGLTF);

  // On load, filter all references of the meshes of the 3d Object,
  // and save it to the meshes_array hook in app.js
  // Allows app.js to directly manipulate the color of the meshes.
  useEffect(() => {
    console.log(nodes);
    const meshes_array = nodes.Scene.children.filter(
      (object) => object.type === "Mesh"
    );
    props.handleSetMesh(meshes_array);
  }, []);

  return (
    <group ref={group} {...props} dispose={null}>
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Big_cable.geometry}
        material={materials["Black tube"]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Handles.geometry}
        material={nodes.Handles.material}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Main.geometry}
        material={nodes.Main.material}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Cube005.geometry}
        material={materials.Black}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Cube005_1.geometry}
        material={nodes.Cube005_1.material}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Cable_Front.geometry}
        material={materials["Red Cable"]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.BezierCurve003.geometry}
        material={materials["Blue Cable"]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.BezierCurve004.geometry}
        material={materials["Yellow Cable"]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.BezierCurve005.geometry}
        material={materials["Green Cable"]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Small_Cable.geometry}
        material={nodes.Small_Cable.material}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.BezierCurve008.geometry}
        material={materials["Material.001"]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Holder.geometry}
        material={nodes.Holder.material}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Circle001.geometry}
        material={nodes.Circle001.material}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Circle002.geometry}
        material={nodes.Circle002.material}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Circle003.geometry}
        material={nodes.Circle003.material}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Circle004.geometry}
        material={nodes.Circle004.material}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Circle005.geometry}
        material={nodes.Circle005.material}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Circle006.geometry}
        material={nodes.Circle006.material}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Circle007.geometry}
        material={nodes.Circle007.material}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Circle008.geometry}
        material={nodes.Circle008.material}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Siren.geometry}
        material={nodes.Siren.material}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Siren_Holder.geometry}
        material={nodes.Siren_Holder.material}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Main002.geometry}
        material={materials.countdown}
      />
    </group>
  );
};

useGLTF.preload("/bomb.gltf");
export default Bomb;
